<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    // Add your code here
    // rightnow stores the current time
    var rightnow = new GlideDateTime();
    // create a GlideDateTime object for the When needed date
    var whenNeeded = new GlideDateTime(current.u_when_needed);

    gs.info("neededIt: current getDate of rightnow is " + rightnow.getDate().toString());
    gs.info("neededIt: current getLocalDate of rightnow is " + rightnow.getLocalDate().toString());
    gs.info("neededIt: current getDate of whenNeeded is " + whenNeeded.getDate().toString());
    gs.info("neededIt: current getLocalDate of whenNeeded is " + whenNeeded.getLocalDate().toString());
    gs.info("testing condition of getDate " + rightnow.getDate().equals(whenNeeded.getDate()).toString());
    gs.info("testing of compare " + rightnow.getLocalDate().compareTo(whenNeeded.getLocalDate()).toString());
    // for my debugging here
    //if( rightnow.getDate().equals(wheenNeeded.getDate()) ){
    //		gs.addErrorMessage("cannot submit today request for Thomas");
    //		current.setAbortAction(true);
    //}

    // thomas test
    //var test1 = rightnow.getLocalDate().compareTo(whenNeeded.getLocalDate()).toString();
    //var test2 = rightnow.getDate().equals(whenNeeded.getDate()).toString();

    //if (whenNeeded.before(rightnow) || (rightnow.getLocalDate().compareTo(whenNeeded.getLocalDate())) == 0) {
    //    gs.addErrorMessage("needed date cannot be today or in the past - Thomas");
    //    current.setAbortAction(true);
    //}
	
	// use Script Include here
	
	//must instantiate the NeedItUtils class
	var niutils = new NeedItUtils();
	var isPast = niutils.isDatePast(current.u_when_needed);
	var isToday = niutils.isTodayDate(current.u_when_needed);
	if(isPast || isToday){
		gs.addErrorMessage("needed date cannot be today or in the past - Thomas");
        current.setAbortAction(true);
	}
	
	
	// end of use script include
	
	
	
	
    // if the When needed date is before the rightnow, do not write the record to the database but output the error message to screen
    //	if(whenNeeded.before(rightnow))
    //		{
    //			gs.addErrorMessage("When needed date cannot be in the past. Your request has not been saved to the database");
    //			current.setAbortAction(true);
    //		}

    // same date request is not allowed
    //	var today =  rightnow.getLocalDate();
    //	var istoday = whenNeeded.getLocalDate();
    //	if(today.compareTo(istoday) == 0){
    //		gs.addErrorMessage("You cannot submit NeededI request for today");
    //		current.setAbortAction(true);
    //	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-05-01 13:47:14</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7d7ba8a52f222110c831206df699b68f</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_7d7ba8a52f222110c831206df699b68f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-05-04 15:14:04</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7d7ba8a52f222110c831206df699b68f"/>
</record_update>
